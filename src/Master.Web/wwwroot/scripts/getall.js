/* This file is automatically generated by ABP framework to use MVC Controllers from JavaScript. */

var abp = abp || {};
abp.services = abp.services || {};

// module 'app'
(function(){

  abp.services.app = abp.services.app || {};

  // controller 'file'
  (function(){

    abp.services.app.file = abp.services.app.file || {};

    // action 'uploadByContent'
    abp.services.app.file.uploadByContent = function(html, filePath, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'File/UploadByContent' + abp.utils.buildQueryString([{ name: 'filePath', value: filePath }]) + '',
        type: 'POST',
        data: JSON.stringify(html)
      }, ajaxParams));;
    };

    // action 'thumb'
    abp.services.app.file.thumb = function(fileid, w, h, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'File/Thumb/{fileId}' + abp.utils.buildQueryString([{ name: 'w', value: w }, { name: 'h', value: h }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getPageResult'
    abp.services.app.file.getPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/File/GetPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getFilterColumnPageResult'
    abp.services.app.file.getFilterColumnPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/File/GetFilterColumnPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getSuggestResult'
    abp.services.app.file.getSuggestResult = function(requestSuggestDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/File/GetSuggestResult' + abp.utils.buildQueryString([{ name: 'columnKey', value: requestSuggestDto.columnKey }, { name: 'keyword', value: requestSuggestDto.keyword }, { name: 'moduleKey', value: requestSuggestDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getById'
    abp.services.app.file.getById = function(primary, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/File/GetById' + abp.utils.buildQueryString([{ name: 'primary', value: primary }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getListByIds'
    abp.services.app.file.getListByIds = function(primaries, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/File/GetListByIds' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getGroupedField'
    abp.services.app.file.getGroupedField = function(key, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/File/GetGroupedField' + abp.utils.buildQueryString([{ name: 'key', value: key }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'deleteEntity'
    abp.services.app.file.deleteEntity = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/File/DeleteEntity' + abp.utils.buildQueryString([{ name: 'ids', value: ids }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'formSubmit'
    abp.services.app.file.formSubmit = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/File/FormSubmit',
        type: 'POST',
        data: JSON.stringify(request)
      }, ajaxParams));;
    };

    // action 'setStatus'
    abp.services.app.file.setStatus = function(primaries, status, isSet, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/File/SetStatus' + abp.utils.buildQueryString([{ name: 'status', value: status }, { name: 'isSet', value: isSet }]) + '',
        type: 'POST',
        data: JSON.stringify(primaries)
      }, ajaxParams));;
    };

  })();

  // controller 'tokenAuth'
  (function(){

    abp.services.app.tokenAuth = abp.services.app.tokenAuth || {};

    // action 'authenticate'
    abp.services.app.tokenAuth.authenticate = function(model, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/TokenAuth/Authenticate' + abp.utils.buildQueryString([{ name: 'userName', value: model.userName }, { name: 'password', value: model.password }, { name: 'tenancyName', value: model.tenancyName }, { name: 'verifyCode', value: model.verifyCode }]) + '',
        type: 'POST'
      }, ajaxParams));;
    };

    // action 'getExternalAuthenticationProviders'
    abp.services.app.tokenAuth.getExternalAuthenticationProviders = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/TokenAuth/GetExternalAuthenticationProviders',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'externalAuthenticate'
    abp.services.app.tokenAuth.externalAuthenticate = function(model, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/TokenAuth/ExternalAuthenticate' + abp.utils.buildQueryString([{ name: 'authProvider', value: model.authProvider }, { name: 'providerKey', value: model.providerKey }, { name: 'providerAccessCode', value: model.providerAccessCode }, { name: 'clientInfo', value: model.clientInfo }]) + '',
        type: 'POST'
      }, ajaxParams));;
    };

    // action 'error'
    abp.services.app.tokenAuth.error = function(msg, detail, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/TokenAuth/Error' + abp.utils.buildQueryString([{ name: 'msg', value: msg }, { name: 'detail', value: detail }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'success'
    abp.services.app.tokenAuth.success = function(msg, detail, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/TokenAuth/Success' + abp.utils.buildQueryString([{ name: 'msg', value: msg }, { name: 'detail', value: detail }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'qRCode'
  (function(){

    abp.services.app.qRCode = abp.services.app.qRCode || {};

    // action 'getQRCode'
    abp.services.app.qRCode.getQRCode = function(url, pixel, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/qrcode' + abp.utils.buildQueryString([{ name: 'url', value: url }, { name: 'pixel', value: pixel }]) + '',
        type: 'GET',
        dataType: null
      }, ajaxParams));;
    };

  })();

  // controller 'permission'
  (function(){

    abp.services.app.permission = abp.services.app.permission || {};

    // action 'getAllGrantedPermissions'
    abp.services.app.permission.getAllGrantedPermissions = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Permission/GetAllGrantedPermissions',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'assignAllMenuPermission'
    abp.services.app.permission.assignAllMenuPermission = function(type, permissionNames, id, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Permission/AssignAllMenuPermission' + abp.utils.buildQueryString([{ name: 'type', value: type }, { name: 'id', value: id }]) + '',
        type: 'POST',
        data: JSON.stringify(permissionNames)
      }, ajaxParams));;
    };

    // action 'loadGrantedMenuPermissions'
    abp.services.app.permission.loadGrantedMenuPermissions = function(type, id, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Permission/LoadGrantedMenuPermissions' + abp.utils.buildQueryString([{ name: 'type', value: type }, { name: 'id', value: id }]) + '',
        type: 'POST'
      }, ajaxParams));;
    };

    // action 'assignPermission'
    abp.services.app.permission.assignPermission = function(type, permissionName, id, isGranted, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Permission/AssignPermission' + abp.utils.buildQueryString([{ name: 'type', value: type }, { name: 'permissionName', value: permissionName }, { name: 'id', value: id }, { name: 'isGranted', value: isGranted }]) + '',
        type: 'POST'
      }, ajaxParams));;
    };

    // action 'getMenuDetailPermissions'
    abp.services.app.permission.getMenuDetailPermissions = function(type, id, menu, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Permission/GetMenuDetailPermissions' + abp.utils.buildQueryString([{ name: 'type', value: type }, { name: 'id', value: id }, { name: 'menu', value: menu }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'delUserPermissions'
    abp.services.app.permission.delUserPermissions = function(userId, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Permission/DelUserPermissions' + abp.utils.buildQueryString([{ name: 'userId', value: userId }]) + '',
        type: 'POST'
      }, ajaxParams));;
    };

    // action 'grantAllPermissions'
    abp.services.app.permission.grantAllPermissions = function(id, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Permission/GrantAllPermissions' + abp.utils.buildQueryString([{ name: 'id', value: id }]) + '',
        type: 'POST'
      }, ajaxParams));;
    };

  })();

  // controller 'user'
  (function(){

    abp.services.app.user = abp.services.app.user || {};

    // action 'formSubmit'
    abp.services.app.user.formSubmit = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/User/FormSubmit',
        type: 'POST',
        data: JSON.stringify(request)
      }, ajaxParams));;
    };

    // action 'getSimplePageResult'
    abp.services.app.user.getSimplePageResult = function(requestPageDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/User/GetSimplePageResult' + abp.utils.buildQueryString([{ name: 'page', value: requestPageDto.page }, { name: 'limit', value: requestPageDto.limit }, { name: 'where', value: requestPageDto.where }, { name: 'tableFilter', value: requestPageDto.tableFilter }, { name: 'filterField', value: requestPageDto.filterField }, { name: 'filterKey', value: requestPageDto.filterKey }, { name: 'filterColumns', value: requestPageDto.filterColumns }, { name: 'searchCondition', value: requestPageDto.searchCondition }, { name: 'filterSos', value: requestPageDto.filterSos }, { name: 'searchKeys', value: requestPageDto.searchKeys }, { name: 'keyword', value: requestPageDto.keyword }, { name: 'orderField', value: requestPageDto.orderField }, { name: 'orderType', value: requestPageDto.orderType }, { name: 'moduleKey', value: requestPageDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'freeze'
    abp.services.app.user.freeze = function(userIds, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/User/Freeze',
        type: 'POST',
        data: JSON.stringify(userIds)
      }, ajaxParams));;
    };

    // action 'unFreeze'
    abp.services.app.user.unFreeze = function(userIds, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/User/UnFreeze',
        type: 'POST',
        data: JSON.stringify(userIds)
      }, ajaxParams));;
    };

    // action 'revert'
    abp.services.app.user.revert = function(userIds, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/User/Revert',
        type: 'POST',
        data: JSON.stringify(userIds)
      }, ajaxParams));;
    };

    // action 'changePassword'
    abp.services.app.user.changePassword = function(oriPassword, newPassword, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/User/ChangePassword' + abp.utils.buildQueryString([{ name: 'oriPassword', value: oriPassword }, { name: 'newPassword', value: newPassword }]) + '',
        type: 'POST'
      }, ajaxParams));;
    };

    // action 'getLoginProviders'
    abp.services.app.user.getLoginProviders = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/User/GetLoginProviders',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getBindedLoginProviders'
    abp.services.app.user.getBindedLoginProviders = function(userId, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/User/GetBindedLoginProviders' + abp.utils.buildQueryString([{ name: 'userId', value: userId }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'unBindLogin'
    abp.services.app.user.unBindLogin = function(provider, userId, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/User/UnBindLogin' + abp.utils.buildQueryString([{ name: 'provider', value: provider }, { name: 'userId', value: userId }]) + '',
        type: 'POST'
      }, ajaxParams));;
    };

    // action 'removeFromRole'
    abp.services.app.user.removeFromRole = function(userId, roleId, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/User/RemoveFromRole' + abp.utils.buildQueryString([{ name: 'userId', value: userId }, { name: 'roleId', value: roleId }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'moveIntoRole'
    abp.services.app.user.moveIntoRole = function(userIds, roleId, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/User/MoveIntoRole' + abp.utils.buildQueryString([{ name: 'roleId', value: roleId }]) + '',
        type: 'POST',
        data: JSON.stringify(userIds)
      }, ajaxParams));;
    };

    // action 'getUserIsActive'
    abp.services.app.user.getUserIsActive = function(id, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/User/GetUserIsActive' + abp.utils.buildQueryString([{ name: 'id', value: id }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getCurrentToken'
    abp.services.app.user.getCurrentToken = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/User/GetCurrentToken',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getPageResult'
    abp.services.app.user.getPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/User/GetPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getSuggestResult'
    abp.services.app.user.getSuggestResult = function(requestSuggestDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/User/GetSuggestResult' + abp.utils.buildQueryString([{ name: 'columnKey', value: requestSuggestDto.columnKey }, { name: 'keyword', value: requestSuggestDto.keyword }, { name: 'moduleKey', value: requestSuggestDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getFilterColumnPageResult'
    abp.services.app.user.getFilterColumnPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/User/GetFilterColumnPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getById'
    abp.services.app.user.getById = function(primary, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/User/GetById' + abp.utils.buildQueryString([{ name: 'primary', value: primary }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getListByIds'
    abp.services.app.user.getListByIds = function(primaries, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/User/GetListByIds' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getGroupedField'
    abp.services.app.user.getGroupedField = function(key, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/User/GetGroupedField' + abp.utils.buildQueryString([{ name: 'key', value: key }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'deleteEntity'
    abp.services.app.user.deleteEntity = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/User/DeleteEntity' + abp.utils.buildQueryString([{ name: 'ids', value: ids }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'setStatus'
    abp.services.app.user.setStatus = function(primaries, status, isSet, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/User/SetStatus' + abp.utils.buildQueryString([{ name: 'status', value: status }, { name: 'isSet', value: isSet }]) + '',
        type: 'POST',
        data: JSON.stringify(primaries)
      }, ajaxParams));;
    };

  })();

  // controller 'tenant'
  (function(){

    abp.services.app.tenant = abp.services.app.tenant || {};

    // action 'setTenantLogo'
    abp.services.app.tenant.setTenantLogo = function(logo, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Tenant/SetTenantLogo' + abp.utils.buildQueryString([{ name: 'logo', value: logo }]) + '',
        type: 'POST'
      }, ajaxParams));;
    };

    // action 'setEdition'
    abp.services.app.tenant.setEdition = function(tenantId, editionId, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Tenant/SetEdition' + abp.utils.buildQueryString([{ name: 'tenantId', value: tenantId }, { name: 'editionId', value: editionId }]) + '',
        type: 'POST'
      }, ajaxParams));;
    };

    // action 'setActive'
    abp.services.app.tenant.setActive = function(tenantId, isActive, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Tenant/SetActive' + abp.utils.buildQueryString([{ name: 'tenantId', value: tenantId }, { name: 'isActive', value: isActive }]) + '',
        type: 'POST'
      }, ajaxParams));;
    };

    // action 'initModule'
    abp.services.app.tenant.initModule = function(ids, addOn, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Tenant/InitModule' + abp.utils.buildQueryString([{ name: 'addOn', value: addOn }]) + '',
        type: 'POST',
        data: JSON.stringify(ids)
      }, ajaxParams));;
    };

    // action 'initAdminRole'
    abp.services.app.tenant.initAdminRole = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Tenant/InitAdminRole',
        type: 'POST',
        data: JSON.stringify(ids)
      }, ajaxParams));;
    };

    // action 'updateField'
    abp.services.app.tenant.updateField = function(tenantId, field, value, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Tenant/UpdateField' + abp.utils.buildQueryString([{ name: 'tenantId', value: tenantId }, { name: 'field', value: field }, { name: 'value', value: value }]) + '',
        type: 'PUT'
      }, ajaxParams));;
    };

    // action 'getPageResult'
    abp.services.app.tenant.getPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Tenant/GetPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getFilterColumnPageResult'
    abp.services.app.tenant.getFilterColumnPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Tenant/GetFilterColumnPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getSuggestResult'
    abp.services.app.tenant.getSuggestResult = function(requestSuggestDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Tenant/GetSuggestResult' + abp.utils.buildQueryString([{ name: 'columnKey', value: requestSuggestDto.columnKey }, { name: 'keyword', value: requestSuggestDto.keyword }, { name: 'moduleKey', value: requestSuggestDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getById'
    abp.services.app.tenant.getById = function(primary, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Tenant/GetById' + abp.utils.buildQueryString([{ name: 'primary', value: primary }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getListByIds'
    abp.services.app.tenant.getListByIds = function(primaries, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Tenant/GetListByIds' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getGroupedField'
    abp.services.app.tenant.getGroupedField = function(key, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Tenant/GetGroupedField' + abp.utils.buildQueryString([{ name: 'key', value: key }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'deleteEntity'
    abp.services.app.tenant.deleteEntity = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Tenant/DeleteEntity' + abp.utils.buildQueryString([{ name: 'ids', value: ids }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'formSubmit'
    abp.services.app.tenant.formSubmit = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Tenant/FormSubmit',
        type: 'POST',
        data: JSON.stringify(request)
      }, ajaxParams));;
    };

    // action 'setStatus'
    abp.services.app.tenant.setStatus = function(primaries, status, isSet, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Tenant/SetStatus' + abp.utils.buildQueryString([{ name: 'status', value: status }, { name: 'isSet', value: isSet }]) + '',
        type: 'POST',
        data: JSON.stringify(primaries)
      }, ajaxParams));;
    };

  })();

  // controller 'template'
  (function(){

    abp.services.app.template = abp.services.app.template || {};

    // action 'getTemplates'
    abp.services.app.template.getTemplates = function(templateType, tenantId, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Template/GetTemplates' + abp.utils.buildQueryString([{ name: 'templateType', value: templateType }, { name: 'tenantId', value: tenantId }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'addTemplate'
    abp.services.app.template.addTemplate = function(templateDto, tenantId, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Template/AddTemplate' + abp.utils.buildQueryString([{ name: 'tenantId', value: tenantId }]) + '',
        type: 'POST',
        data: JSON.stringify(templateDto)
      }, ajaxParams));;
    };

    // action 'delTemplate'
    abp.services.app.template.delTemplate = function(templateId, tenantId, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Template/DelTemplate' + abp.utils.buildQueryString([{ name: 'templateId', value: templateId }, { name: 'tenantId', value: tenantId }]) + '',
        type: 'POST'
      }, ajaxParams));;
    };

    // action 'updateTemplate'
    abp.services.app.template.updateTemplate = function(templateDto, tenantId, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Template/UpdateTemplate' + abp.utils.buildQueryString([{ name: 'tenantId', value: tenantId }]) + '',
        type: 'PUT',
        data: JSON.stringify(templateDto)
      }, ajaxParams));;
    };

    // action 'getPageResult'
    abp.services.app.template.getPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Template/GetPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getFilterColumnPageResult'
    abp.services.app.template.getFilterColumnPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Template/GetFilterColumnPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getSuggestResult'
    abp.services.app.template.getSuggestResult = function(requestSuggestDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Template/GetSuggestResult' + abp.utils.buildQueryString([{ name: 'columnKey', value: requestSuggestDto.columnKey }, { name: 'keyword', value: requestSuggestDto.keyword }, { name: 'moduleKey', value: requestSuggestDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getById'
    abp.services.app.template.getById = function(primary, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Template/GetById' + abp.utils.buildQueryString([{ name: 'primary', value: primary }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getListByIds'
    abp.services.app.template.getListByIds = function(primaries, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Template/GetListByIds' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getGroupedField'
    abp.services.app.template.getGroupedField = function(key, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Template/GetGroupedField' + abp.utils.buildQueryString([{ name: 'key', value: key }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'deleteEntity'
    abp.services.app.template.deleteEntity = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Template/DeleteEntity' + abp.utils.buildQueryString([{ name: 'ids', value: ids }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'formSubmit'
    abp.services.app.template.formSubmit = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Template/FormSubmit',
        type: 'POST',
        data: JSON.stringify(request)
      }, ajaxParams));;
    };

    // action 'setStatus'
    abp.services.app.template.setStatus = function(primaries, status, isSet, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Template/SetStatus' + abp.utils.buildQueryString([{ name: 'status', value: status }, { name: 'isSet', value: isSet }]) + '',
        type: 'POST',
        data: JSON.stringify(primaries)
      }, ajaxParams));;
    };

  })();

  // controller 'setting'
  (function(){

    abp.services.app.setting = abp.services.app.setting || {};

    // action 'updateSettings'
    abp.services.app.setting.updateSettings = function(settingDtos, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Setting/UpdateSettings',
        type: 'PUT',
        data: JSON.stringify(settingDtos)
      }, ajaxParams));;
    };

  })();

  // controller 'session'
  (function(){

    abp.services.app.session = abp.services.app.session || {};

    // action 'getCurrentLoginInformations'
    abp.services.app.session.getCurrentLoginInformations = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Session/GetCurrentLoginInformations',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'checkPassword'
    abp.services.app.session.checkPassword = function(password, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Session/CheckPassword' + abp.utils.buildQueryString([{ name: 'password', value: password }]) + '',
        type: 'POST'
      }, ajaxParams));;
    };

    // action 'refreshWechatLoginId'
    abp.services.app.session.refreshWechatLoginId = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Session/RefreshWechatLoginId',
        type: 'POST'
      }, ajaxParams));;
    };

  })();

  // controller 'seat'
  (function(){

    abp.services.app.seat = abp.services.app.seat || {};

    // action 'add'
    abp.services.app.seat.add = function(seatNumber, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Seat/Add' + abp.utils.buildQueryString([{ name: 'seatNumber', value: seatNumber }]) + '',
        type: 'POST'
      }, ajaxParams));;
    };

    // action 'setActive'
    abp.services.app.seat.setActive = function(seatId, isActive, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Seat/SetActive' + abp.utils.buildQueryString([{ name: 'seatId', value: seatId }, { name: 'isActive', value: isActive }]) + '',
        type: 'POST'
      }, ajaxParams));;
    };

    // action 'setRemarks'
    abp.services.app.seat.setRemarks = function(seatId, remarks, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Seat/SetRemarks' + abp.utils.buildQueryString([{ name: 'seatId', value: seatId }, { name: 'remarks', value: remarks }]) + '',
        type: 'POST'
      }, ajaxParams));;
    };

    // action 'getPageResult'
    abp.services.app.seat.getPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Seat/GetPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getFilterColumnPageResult'
    abp.services.app.seat.getFilterColumnPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Seat/GetFilterColumnPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getSuggestResult'
    abp.services.app.seat.getSuggestResult = function(requestSuggestDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Seat/GetSuggestResult' + abp.utils.buildQueryString([{ name: 'columnKey', value: requestSuggestDto.columnKey }, { name: 'keyword', value: requestSuggestDto.keyword }, { name: 'moduleKey', value: requestSuggestDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getById'
    abp.services.app.seat.getById = function(primary, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Seat/GetById' + abp.utils.buildQueryString([{ name: 'primary', value: primary }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getListByIds'
    abp.services.app.seat.getListByIds = function(primaries, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Seat/GetListByIds' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getGroupedField'
    abp.services.app.seat.getGroupedField = function(key, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Seat/GetGroupedField' + abp.utils.buildQueryString([{ name: 'key', value: key }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'deleteEntity'
    abp.services.app.seat.deleteEntity = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Seat/DeleteEntity' + abp.utils.buildQueryString([{ name: 'ids', value: ids }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'formSubmit'
    abp.services.app.seat.formSubmit = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Seat/FormSubmit',
        type: 'POST',
        data: JSON.stringify(request)
      }, ajaxParams));;
    };

    // action 'setStatus'
    abp.services.app.seat.setStatus = function(primaries, status, isSet, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Seat/SetStatus' + abp.utils.buildQueryString([{ name: 'status', value: status }, { name: 'isSet', value: isSet }]) + '',
        type: 'POST',
        data: JSON.stringify(primaries)
      }, ajaxParams));;
    };

  })();

  // controller 'role'
  (function(){

    abp.services.app.role = abp.services.app.role || {};

    // action 'addRole'
    abp.services.app.role.addRole = function(name, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Role/AddRole' + abp.utils.buildQueryString([{ name: 'name', value: name }]) + '',
        type: 'POST'
      }, ajaxParams));;
    };

    // action 'editRole'
    abp.services.app.role.editRole = function(id, name, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Role/EditRole' + abp.utils.buildQueryString([{ name: 'id', value: id }, { name: 'name', value: name }]) + '',
        type: 'POST'
      }, ajaxParams));;
    };

    // action 'deleteEntity'
    abp.services.app.role.deleteEntity = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Role/DeleteEntity' + abp.utils.buildQueryString([{ name: 'ids', value: ids }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'getPageResult'
    abp.services.app.role.getPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Role/GetPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getTenantRoles'
    abp.services.app.role.getTenantRoles = function(tenantId, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Role/GetTenantRoles' + abp.utils.buildQueryString([{ name: 'tenantId', value: tenantId }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'updateField'
    abp.services.app.role.updateField = function(roleId, field, value, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Role/UpdateField' + abp.utils.buildQueryString([{ name: 'roleId', value: roleId }, { name: 'field', value: field }, { name: 'value', value: value }]) + '',
        type: 'PUT'
      }, ajaxParams));;
    };

    // action 'getFilterColumnPageResult'
    abp.services.app.role.getFilterColumnPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Role/GetFilterColumnPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getSuggestResult'
    abp.services.app.role.getSuggestResult = function(requestSuggestDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Role/GetSuggestResult' + abp.utils.buildQueryString([{ name: 'columnKey', value: requestSuggestDto.columnKey }, { name: 'keyword', value: requestSuggestDto.keyword }, { name: 'moduleKey', value: requestSuggestDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getById'
    abp.services.app.role.getById = function(primary, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Role/GetById' + abp.utils.buildQueryString([{ name: 'primary', value: primary }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getListByIds'
    abp.services.app.role.getListByIds = function(primaries, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Role/GetListByIds' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getGroupedField'
    abp.services.app.role.getGroupedField = function(key, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Role/GetGroupedField' + abp.utils.buildQueryString([{ name: 'key', value: key }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'formSubmit'
    abp.services.app.role.formSubmit = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Role/FormSubmit',
        type: 'POST',
        data: JSON.stringify(request)
      }, ajaxParams));;
    };

    // action 'setStatus'
    abp.services.app.role.setStatus = function(primaries, status, isSet, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Role/SetStatus' + abp.utils.buildQueryString([{ name: 'status', value: status }, { name: 'isSet', value: isSet }]) + '',
        type: 'POST',
        data: JSON.stringify(primaries)
      }, ajaxParams));;
    };

  })();

  // controller 'resource'
  (function(){

    abp.services.app.resource = abp.services.app.resource || {};

    // action 'getPageResult'
    abp.services.app.resource.getPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Resource/GetPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getFilterColumnPageResult'
    abp.services.app.resource.getFilterColumnPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Resource/GetFilterColumnPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getSuggestResult'
    abp.services.app.resource.getSuggestResult = function(requestSuggestDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Resource/GetSuggestResult' + abp.utils.buildQueryString([{ name: 'columnKey', value: requestSuggestDto.columnKey }, { name: 'keyword', value: requestSuggestDto.keyword }, { name: 'moduleKey', value: requestSuggestDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getById'
    abp.services.app.resource.getById = function(primary, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Resource/GetById' + abp.utils.buildQueryString([{ name: 'primary', value: primary }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getListByIds'
    abp.services.app.resource.getListByIds = function(primaries, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Resource/GetListByIds' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getGroupedField'
    abp.services.app.resource.getGroupedField = function(key, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Resource/GetGroupedField' + abp.utils.buildQueryString([{ name: 'key', value: key }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'deleteEntity'
    abp.services.app.resource.deleteEntity = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Resource/DeleteEntity' + abp.utils.buildQueryString([{ name: 'ids', value: ids }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'formSubmit'
    abp.services.app.resource.formSubmit = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Resource/FormSubmit',
        type: 'POST',
        data: JSON.stringify(request)
      }, ajaxParams));;
    };

    // action 'setStatus'
    abp.services.app.resource.setStatus = function(primaries, status, isSet, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Resource/SetStatus' + abp.utils.buildQueryString([{ name: 'status', value: status }, { name: 'isSet', value: isSet }]) + '',
        type: 'POST',
        data: JSON.stringify(primaries)
      }, ajaxParams));;
    };

  })();

  // controller 'notice'
  (function(){

    abp.services.app.notice = abp.services.app.notice || {};

    // action 'addNotice'
    abp.services.app.notice.addNotice = function(title, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Notice/AddNotice' + abp.utils.buildQueryString([{ name: 'title', value: title }]) + '',
        type: 'POST'
      }, ajaxParams));;
    };

    // action 'setActive'
    abp.services.app.notice.setActive = function(id, isActive, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Notice/SetActive' + abp.utils.buildQueryString([{ name: 'id', value: id }, { name: 'isActive', value: isActive }]) + '',
        type: 'POST'
      }, ajaxParams));;
    };

    // action 'updateField'
    abp.services.app.notice.updateField = function(noticeId, field, value, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Notice/UpdateField' + abp.utils.buildQueryString([{ name: 'noticeId', value: noticeId }, { name: 'field', value: field }, { name: 'value', value: value }]) + '',
        type: 'PUT'
      }, ajaxParams));;
    };

    // action 'getActiveNotices'
    abp.services.app.notice.getActiveNotices = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Notice/GetActiveNotices',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getPageResult'
    abp.services.app.notice.getPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Notice/GetPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getFilterColumnPageResult'
    abp.services.app.notice.getFilterColumnPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Notice/GetFilterColumnPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getSuggestResult'
    abp.services.app.notice.getSuggestResult = function(requestSuggestDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Notice/GetSuggestResult' + abp.utils.buildQueryString([{ name: 'columnKey', value: requestSuggestDto.columnKey }, { name: 'keyword', value: requestSuggestDto.keyword }, { name: 'moduleKey', value: requestSuggestDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getById'
    abp.services.app.notice.getById = function(primary, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Notice/GetById' + abp.utils.buildQueryString([{ name: 'primary', value: primary }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getListByIds'
    abp.services.app.notice.getListByIds = function(primaries, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Notice/GetListByIds' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getGroupedField'
    abp.services.app.notice.getGroupedField = function(key, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Notice/GetGroupedField' + abp.utils.buildQueryString([{ name: 'key', value: key }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'deleteEntity'
    abp.services.app.notice.deleteEntity = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Notice/DeleteEntity' + abp.utils.buildQueryString([{ name: 'ids', value: ids }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'formSubmit'
    abp.services.app.notice.formSubmit = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Notice/FormSubmit',
        type: 'POST',
        data: JSON.stringify(request)
      }, ajaxParams));;
    };

    // action 'setStatus'
    abp.services.app.notice.setStatus = function(primaries, status, isSet, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Notice/SetStatus' + abp.utils.buildQueryString([{ name: 'status', value: status }, { name: 'isSet', value: isSet }]) + '',
        type: 'POST',
        data: JSON.stringify(primaries)
      }, ajaxParams));;
    };

  })();

  // controller 'moduleData'
  (function(){

    abp.services.app.moduleData = abp.services.app.moduleData || {};

    // action 'getPageResult'
    abp.services.app.moduleData.getPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ModuleData/GetPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getSuggestResult'
    abp.services.app.moduleData.getSuggestResult = function(requestSuggestDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ModuleData/GetSuggestResult' + abp.utils.buildQueryString([{ name: 'columnKey', value: requestSuggestDto.columnKey }, { name: 'keyword', value: requestSuggestDto.keyword }, { name: 'moduleKey', value: requestSuggestDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'formSubmit'
    abp.services.app.moduleData.formSubmit = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ModuleData/FormSubmit',
        type: 'POST',
        data: JSON.stringify(request)
      }, ajaxParams));;
    };

    // action 'getFilterColumnPageResult'
    abp.services.app.moduleData.getFilterColumnPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ModuleData/GetFilterColumnPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getById'
    abp.services.app.moduleData.getById = function(primary, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ModuleData/GetById' + abp.utils.buildQueryString([{ name: 'primary', value: primary }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getListByIds'
    abp.services.app.moduleData.getListByIds = function(primaries, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ModuleData/GetListByIds' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getGroupedField'
    abp.services.app.moduleData.getGroupedField = function(key, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ModuleData/GetGroupedField' + abp.utils.buildQueryString([{ name: 'key', value: key }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'deleteEntity'
    abp.services.app.moduleData.deleteEntity = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ModuleData/DeleteEntity' + abp.utils.buildQueryString([{ name: 'ids', value: ids }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'setStatus'
    abp.services.app.moduleData.setStatus = function(primaries, status, isSet, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ModuleData/SetStatus' + abp.utils.buildQueryString([{ name: 'status', value: status }, { name: 'isSet', value: isSet }]) + '',
        type: 'POST',
        data: JSON.stringify(primaries)
      }, ajaxParams));;
    };

  })();

  // controller 'moduleInfo'
  (function(){

    abp.services.app.moduleInfo = abp.services.app.moduleInfo || {};

    // action 'addModuleInfo'
    abp.services.app.moduleInfo.addModuleInfo = function(moduleName, moduleKey, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ModuleInfo/AddModuleInfo' + abp.utils.buildQueryString([{ name: 'moduleName', value: moduleName }, { name: 'moduleKey', value: moduleKey }]) + '',
        type: 'POST'
      }, ajaxParams));;
    };

    // action 'getModuleCountSummary'
    abp.services.app.moduleInfo.getModuleCountSummary = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ModuleInfo/GetModuleCountSummary',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getColumnInfos'
    abp.services.app.moduleInfo.getColumnInfos = function(moduleKey, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ModuleInfo/GetColumnInfos' + abp.utils.buildQueryString([{ name: 'moduleKey', value: moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getBtnInfos'
    abp.services.app.moduleInfo.getBtnInfos = function(moduleKey, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ModuleInfo/GetBtnInfos' + abp.utils.buildQueryString([{ name: 'moduleKey', value: moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'updateColumns'
    abp.services.app.moduleInfo.updateColumns = function(columns, moduleInfoId, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ModuleInfo/UpdateColumns' + abp.utils.buildQueryString([{ name: 'moduleInfoId', value: moduleInfoId }]) + '',
        type: 'PUT',
        data: JSON.stringify(columns)
      }, ajaxParams));;
    };

    // action 'updateBtns'
    abp.services.app.moduleInfo.updateBtns = function(btns, moduleInfoId, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ModuleInfo/UpdateBtns' + abp.utils.buildQueryString([{ name: 'moduleInfoId', value: moduleInfoId }]) + '',
        type: 'PUT',
        data: JSON.stringify(btns)
      }, ajaxParams));;
    };

    // action 'getColumnLayData'
    abp.services.app.moduleInfo.getColumnLayData = function(moduleKey, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ModuleInfo/GetColumnLayData' + abp.utils.buildQueryString([{ name: 'moduleKey', value: moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getPageResult'
    abp.services.app.moduleInfo.getPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ModuleInfo/GetPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'initAllModuleInfo'
    abp.services.app.moduleInfo.initAllModuleInfo = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ModuleInfo/InitAllModuleInfo',
        type: 'POST'
      }, ajaxParams));;
    };

    // action 'initModuleInfo'
    abp.services.app.moduleInfo.initModuleInfo = function(moduleInfoIds, hard, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ModuleInfo/InitModuleInfo' + abp.utils.buildQueryString([{ name: 'hard', value: hard }]) + '',
        type: 'POST',
        data: JSON.stringify(moduleInfoIds)
      }, ajaxParams));;
    };

    // action 'setColumnFixed'
    abp.services.app.moduleInfo.setColumnFixed = function(moduleKey, columnKey, isFixed, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ModuleInfo/SetColumnFixed' + abp.utils.buildQueryString([{ name: 'moduleKey', value: moduleKey }, { name: 'columnKey', value: columnKey }, { name: 'isFixed', value: isFixed }]) + '',
        type: 'POST'
      }, ajaxParams));;
    };

    // action 'setColumnWidth'
    abp.services.app.moduleInfo.setColumnWidth = function(moduleKey, columnKey, width, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ModuleInfo/SetColumnWidth' + abp.utils.buildQueryString([{ name: 'moduleKey', value: moduleKey }, { name: 'columnKey', value: columnKey }, { name: 'width', value: width }]) + '',
        type: 'POST'
      }, ajaxParams));;
    };

    // action 'setColumnVisible'
    abp.services.app.moduleInfo.setColumnVisible = function(moduleKey, columnKey, visible, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ModuleInfo/SetColumnVisible' + abp.utils.buildQueryString([{ name: 'moduleKey', value: moduleKey }, { name: 'columnKey', value: columnKey }, { name: 'visible', value: visible }]) + '',
        type: 'POST'
      }, ajaxParams));;
    };

    // action 'setColumnSort'
    abp.services.app.moduleInfo.setColumnSort = function(moduleKey, columnKeys, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ModuleInfo/SetColumnSort' + abp.utils.buildQueryString([{ name: 'moduleKey', value: moduleKey }]) + '',
        type: 'POST',
        data: JSON.stringify(columnKeys)
      }, ajaxParams));;
    };

    // action 'getFilterColumnPageResult'
    abp.services.app.moduleInfo.getFilterColumnPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ModuleInfo/GetFilterColumnPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getSuggestResult'
    abp.services.app.moduleInfo.getSuggestResult = function(requestSuggestDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ModuleInfo/GetSuggestResult' + abp.utils.buildQueryString([{ name: 'columnKey', value: requestSuggestDto.columnKey }, { name: 'keyword', value: requestSuggestDto.keyword }, { name: 'moduleKey', value: requestSuggestDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getById'
    abp.services.app.moduleInfo.getById = function(primary, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ModuleInfo/GetById' + abp.utils.buildQueryString([{ name: 'primary', value: primary }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getListByIds'
    abp.services.app.moduleInfo.getListByIds = function(primaries, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ModuleInfo/GetListByIds' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getGroupedField'
    abp.services.app.moduleInfo.getGroupedField = function(key, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ModuleInfo/GetGroupedField' + abp.utils.buildQueryString([{ name: 'key', value: key }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'deleteEntity'
    abp.services.app.moduleInfo.deleteEntity = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ModuleInfo/DeleteEntity' + abp.utils.buildQueryString([{ name: 'ids', value: ids }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'formSubmit'
    abp.services.app.moduleInfo.formSubmit = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ModuleInfo/FormSubmit',
        type: 'POST',
        data: JSON.stringify(request)
      }, ajaxParams));;
    };

    // action 'setStatus'
    abp.services.app.moduleInfo.setStatus = function(primaries, status, isSet, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/ModuleInfo/SetStatus' + abp.utils.buildQueryString([{ name: 'status', value: status }, { name: 'isSet', value: isSet }]) + '',
        type: 'POST',
        data: JSON.stringify(primaries)
      }, ajaxParams));;
    };

  })();

  // controller 'menu'
  (function(){

    abp.services.app.menu = abp.services.app.menu || {};

    // action 'getFullTenancyMenuTreeJson'
    abp.services.app.menu.getFullTenancyMenuTreeJson = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Menu/GetFullTenancyMenuTreeJson',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getMenuTreeJson'
    abp.services.app.menu.getMenuTreeJson = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Menu/GetMenuTreeJson',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getDefinitionMenu'
    abp.services.app.menu.getDefinitionMenu = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Menu/GetDefinitionMenu',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getUserMenu'
    abp.services.app.menu.getUserMenu = function(userIdentifier, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Menu/GetUserMenu' + abp.utils.buildQueryString([{ name: 'tenantId', value: userIdentifier.tenantId }, { name: 'userId', value: userIdentifier.userId }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getDefaultMenusTreeJson'
    abp.services.app.menu.getDefaultMenusTreeJson = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Menu/GetDefaultMenusTreeJson',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'saveMenuSetting'
    abp.services.app.menu.saveMenuSetting = function(menuTreeDtoList, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Menu/SaveMenuSetting',
        type: 'POST',
        data: JSON.stringify(menuTreeDtoList)
      }, ajaxParams));;
    };

    // action 'getMenuItemDefinitionByMenuTreeDto'
    abp.services.app.menu.getMenuItemDefinitionByMenuTreeDto = function(menuTreeDtos, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Menu/GetMenuItemDefinitionByMenuTreeDto' + abp.utils.buildQueryString([{ name: 'menuTreeDtos', value: menuTreeDtos }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'auditLog'
  (function(){

    abp.services.app.auditLog = abp.services.app.auditLog || {};

    // action 'getPageResult'
    abp.services.app.auditLog.getPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/AuditLog/GetPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getFilterColumnPageResult'
    abp.services.app.auditLog.getFilterColumnPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/AuditLog/GetFilterColumnPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getSuggestResult'
    abp.services.app.auditLog.getSuggestResult = function(requestSuggestDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/AuditLog/GetSuggestResult' + abp.utils.buildQueryString([{ name: 'columnKey', value: requestSuggestDto.columnKey }, { name: 'keyword', value: requestSuggestDto.keyword }, { name: 'moduleKey', value: requestSuggestDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getById'
    abp.services.app.auditLog.getById = function(primary, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/AuditLog/GetById' + abp.utils.buildQueryString([{ name: 'primary', value: primary }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getListByIds'
    abp.services.app.auditLog.getListByIds = function(primaries, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/AuditLog/GetListByIds' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getGroupedField'
    abp.services.app.auditLog.getGroupedField = function(key, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/AuditLog/GetGroupedField' + abp.utils.buildQueryString([{ name: 'key', value: key }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'deleteEntity'
    abp.services.app.auditLog.deleteEntity = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/AuditLog/DeleteEntity' + abp.utils.buildQueryString([{ name: 'ids', value: ids }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'formSubmit'
    abp.services.app.auditLog.formSubmit = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/AuditLog/FormSubmit',
        type: 'POST',
        data: JSON.stringify(request)
      }, ajaxParams));;
    };

    // action 'setStatus'
    abp.services.app.auditLog.setStatus = function(primaries, status, isSet, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/AuditLog/SetStatus' + abp.utils.buildQueryString([{ name: 'status', value: status }, { name: 'isSet', value: isSet }]) + '',
        type: 'POST',
        data: JSON.stringify(primaries)
      }, ajaxParams));;
    };

  })();

  // controller 'systemLog'
  (function(){

    abp.services.app.systemLog = abp.services.app.systemLog || {};

    // action 'getLogs'
    abp.services.app.systemLog.getLogs = function(type, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SystemLog/GetLogs' + abp.utils.buildQueryString([{ name: 'type', value: type }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'addClass'
    abp.services.app.systemLog.addClass = function(str, type, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SystemLog/AddClass' + abp.utils.buildQueryString([{ name: 'str', value: str }, { name: 'type', value: type }]) + '',
        type: 'POST'
      }, ajaxParams));;
    };

    // action 'getTipContent'
    abp.services.app.systemLog.getTipContent = function(url, type, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/SystemLog/GetTipContent' + abp.utils.buildQueryString([{ name: 'url', value: url }, { name: 'type', value: type }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'userLoginAttempts'
  (function(){

    abp.services.app.userLoginAttempts = abp.services.app.userLoginAttempts || {};

    // action 'getPageResult'
    abp.services.app.userLoginAttempts.getPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/UserLoginAttempts/GetPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getFilterColumnPageResult'
    abp.services.app.userLoginAttempts.getFilterColumnPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/UserLoginAttempts/GetFilterColumnPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getSuggestResult'
    abp.services.app.userLoginAttempts.getSuggestResult = function(requestSuggestDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/UserLoginAttempts/GetSuggestResult' + abp.utils.buildQueryString([{ name: 'columnKey', value: requestSuggestDto.columnKey }, { name: 'keyword', value: requestSuggestDto.keyword }, { name: 'moduleKey', value: requestSuggestDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getById'
    abp.services.app.userLoginAttempts.getById = function(primary, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/UserLoginAttempts/GetById' + abp.utils.buildQueryString([{ name: 'primary', value: primary }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getListByIds'
    abp.services.app.userLoginAttempts.getListByIds = function(primaries, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/UserLoginAttempts/GetListByIds' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getGroupedField'
    abp.services.app.userLoginAttempts.getGroupedField = function(key, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/UserLoginAttempts/GetGroupedField' + abp.utils.buildQueryString([{ name: 'key', value: key }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'deleteEntity'
    abp.services.app.userLoginAttempts.deleteEntity = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/UserLoginAttempts/DeleteEntity' + abp.utils.buildQueryString([{ name: 'ids', value: ids }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'formSubmit'
    abp.services.app.userLoginAttempts.formSubmit = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/UserLoginAttempts/FormSubmit',
        type: 'POST',
        data: JSON.stringify(request)
      }, ajaxParams));;
    };

    // action 'setStatus'
    abp.services.app.userLoginAttempts.setStatus = function(primaries, status, isSet, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/UserLoginAttempts/SetStatus' + abp.utils.buildQueryString([{ name: 'status', value: status }, { name: 'isSet', value: isSet }]) + '',
        type: 'POST',
        data: JSON.stringify(primaries)
      }, ajaxParams));;
    };

  })();

  // controller 'language'
  (function(){

    abp.services.app.language = abp.services.app.language || {};

    // action 'get'
    abp.services.app.language.get = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Language/Get',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'import'
  (function(){

    abp.services.app.import = abp.services.app.import || {};

    // action 'doImport'
    abp.services.app.import.doImport = function(importDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Import/DoImport',
        type: 'POST',
        data: JSON.stringify(importDto)
      }, ajaxParams));;
    };

    // action 'readFromExcel'
    abp.services.app.import.readFromExcel = function(fileId, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Import/ReadFromExcel' + abp.utils.buildQueryString([{ name: 'fileId', value: fileId }]) + '',
        type: 'POST'
      }, ajaxParams));;
    };

  })();

  // controller 'dictionary'
  (function(){

    abp.services.app.dictionary = abp.services.app.dictionary || {};

    // action 'getAllKeys'
    abp.services.app.dictionary.getAllKeys = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Dictionary/GetAllKeysAsync',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'isInInnerDics'
    abp.services.app.dictionary.isInInnerDics = function(key, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Dictionary/IsInInnerDics' + abp.utils.buildQueryString([{ name: 'key', value: key }]) + '',
        type: 'POST'
      }, ajaxParams));;
    };

    // action 'addDictionary'
    abp.services.app.dictionary.addDictionary = function(name, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Dictionary/AddDictionary' + abp.utils.buildQueryString([{ name: 'name', value: name }]) + '',
        type: 'POST'
      }, ajaxParams));;
    };

    // action 'updateDictionary'
    abp.services.app.dictionary.updateDictionary = function(id, dicContent, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Dictionary/UpdateDictionary' + abp.utils.buildQueryString([{ name: 'id', value: id }, { name: 'dicContent', value: dicContent }]) + '',
        type: 'PUT'
      }, ajaxParams));;
    };

    // action 'getDictionary'
    abp.services.app.dictionary.getDictionary = function(dictionaryName, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Dictionary/GetDictionary' + abp.utils.buildQueryString([{ name: 'dictionaryName', value: dictionaryName }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getPageResult'
    abp.services.app.dictionary.getPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Dictionary/GetPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getFilterColumnPageResult'
    abp.services.app.dictionary.getFilterColumnPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Dictionary/GetFilterColumnPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getSuggestResult'
    abp.services.app.dictionary.getSuggestResult = function(requestSuggestDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Dictionary/GetSuggestResult' + abp.utils.buildQueryString([{ name: 'columnKey', value: requestSuggestDto.columnKey }, { name: 'keyword', value: requestSuggestDto.keyword }, { name: 'moduleKey', value: requestSuggestDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getById'
    abp.services.app.dictionary.getById = function(primary, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Dictionary/GetById' + abp.utils.buildQueryString([{ name: 'primary', value: primary }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getListByIds'
    abp.services.app.dictionary.getListByIds = function(primaries, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Dictionary/GetListByIds' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getGroupedField'
    abp.services.app.dictionary.getGroupedField = function(key, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Dictionary/GetGroupedField' + abp.utils.buildQueryString([{ name: 'key', value: key }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'deleteEntity'
    abp.services.app.dictionary.deleteEntity = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Dictionary/DeleteEntity' + abp.utils.buildQueryString([{ name: 'ids', value: ids }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'formSubmit'
    abp.services.app.dictionary.formSubmit = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Dictionary/FormSubmit',
        type: 'POST',
        data: JSON.stringify(request)
      }, ajaxParams));;
    };

    // action 'setStatus'
    abp.services.app.dictionary.setStatus = function(primaries, status, isSet, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Dictionary/SetStatus' + abp.utils.buildQueryString([{ name: 'status', value: status }, { name: 'isSet', value: isSet }]) + '',
        type: 'POST',
        data: JSON.stringify(primaries)
      }, ajaxParams));;
    };

  })();

  // controller 'edition'
  (function(){

    abp.services.app.edition = abp.services.app.edition || {};

    // action 'getAll'
    abp.services.app.edition.getAll = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Edition/GetAll',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'addEdition'
    abp.services.app.edition.addEdition = function(text, key, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Edition/AddEdition' + abp.utils.buildQueryString([{ name: 'text', value: text }, { name: 'key', value: key }]) + '',
        type: 'POST'
      }, ajaxParams));;
    };

    // action 'updateField'
    abp.services.app.edition.updateField = function(editionId, field, value, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Edition/UpdateField' + abp.utils.buildQueryString([{ name: 'editionId', value: editionId }, { name: 'field', value: field }, { name: 'value', value: value }]) + '',
        type: 'PUT'
      }, ajaxParams));;
    };

    // action 'getPageResult'
    abp.services.app.edition.getPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Edition/GetPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getFilterColumnPageResult'
    abp.services.app.edition.getFilterColumnPageResult = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Edition/GetFilterColumnPageResult' + abp.utils.buildQueryString([{ name: 'page', value: request.page }, { name: 'limit', value: request.limit }, { name: 'where', value: request.where }, { name: 'tableFilter', value: request.tableFilter }, { name: 'filterField', value: request.filterField }, { name: 'filterKey', value: request.filterKey }, { name: 'filterColumns', value: request.filterColumns }, { name: 'searchCondition', value: request.searchCondition }, { name: 'filterSos', value: request.filterSos }, { name: 'searchKeys', value: request.searchKeys }, { name: 'keyword', value: request.keyword }, { name: 'orderField', value: request.orderField }, { name: 'orderType', value: request.orderType }, { name: 'moduleKey', value: request.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getSuggestResult'
    abp.services.app.edition.getSuggestResult = function(requestSuggestDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Edition/GetSuggestResult' + abp.utils.buildQueryString([{ name: 'columnKey', value: requestSuggestDto.columnKey }, { name: 'keyword', value: requestSuggestDto.keyword }, { name: 'moduleKey', value: requestSuggestDto.moduleKey }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getById'
    abp.services.app.edition.getById = function(primary, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Edition/GetById' + abp.utils.buildQueryString([{ name: 'primary', value: primary }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getListByIds'
    abp.services.app.edition.getListByIds = function(primaries, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Edition/GetListByIds' + abp.utils.buildQueryString([{ name: 'primaries', value: primaries }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'getGroupedField'
    abp.services.app.edition.getGroupedField = function(key, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Edition/GetGroupedField' + abp.utils.buildQueryString([{ name: 'key', value: key }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'deleteEntity'
    abp.services.app.edition.deleteEntity = function(ids, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Edition/DeleteEntity' + abp.utils.buildQueryString([{ name: 'ids', value: ids }]) + '',
        type: 'DELETE'
      }, ajaxParams));;
    };

    // action 'formSubmit'
    abp.services.app.edition.formSubmit = function(request, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Edition/FormSubmit',
        type: 'POST',
        data: JSON.stringify(request)
      }, ajaxParams));;
    };

    // action 'setStatus'
    abp.services.app.edition.setStatus = function(primaries, status, isSet, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Edition/SetStatus' + abp.utils.buildQueryString([{ name: 'status', value: status }, { name: 'isSet', value: isSet }]) + '',
        type: 'POST',
        data: JSON.stringify(primaries)
      }, ajaxParams));;
    };

  })();

  // controller 'feature'
  (function(){

    abp.services.app.feature = abp.services.app.feature || {};

    // action 'submitFeature'
    abp.services.app.feature.submitFeature = function(featureSubmitDto, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Feature/SubmitFeature',
        type: 'POST',
        data: JSON.stringify(featureSubmitDto)
      }, ajaxParams));;
    };

    // action 'resetTenantFeature'
    abp.services.app.feature.resetTenantFeature = function(tenantId, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/Feature/ResetTenantFeature' + abp.utils.buildQueryString([{ name: 'tenantId', value: tenantId }]) + '',
        type: 'POST'
      }, ajaxParams));;
    };

  })();

  // controller 'miniProgram'
  (function(){

    abp.services.app.miniProgram = abp.services.app.miniProgram || {};

    // action 'bindLogin'
    abp.services.app.miniProgram.bindLogin = function(encryptedUserId, openId, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MiniProgram/BindLogin' + abp.utils.buildQueryString([{ name: 'encryptedUserId', value: encryptedUserId }, { name: 'openId', value: openId }]) + '',
        type: 'POST'
      }, ajaxParams));;
    };

    // action 'getUserInfo'
    abp.services.app.miniProgram.getUserInfo = function(openId, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/MiniProgram/GetUserInfo' + abp.utils.buildQueryString([{ name: 'openId', value: openId }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

  })();

  // controller 'weiXin'
  (function(){

    abp.services.app.weiXin = abp.services.app.weiXin || {};

    // action 'login'
    abp.services.app.weiXin.login = function(guid, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/WeiXin/Login' + abp.utils.buildQueryString([{ name: 'guid', value: guid }]) + '',
        type: 'POST',
        dataType: null
      }, ajaxParams));;
    };

    // action 'getLoginInfo'
    abp.services.app.weiXin.getLoginInfo = function(guid, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/WeiXin/GetLoginInfo' + abp.utils.buildQueryString([{ name: 'guid', value: guid }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'bindLogin'
    abp.services.app.weiXin.bindLogin = function(encryptedUserId, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/WeiXin/BindLogin' + abp.utils.buildQueryString([{ name: 'encryptedUserId', value: encryptedUserId }]) + '',
        type: 'POST'
      }, ajaxParams));;
    };

    // action 'getBindLoginInfo'
    abp.services.app.weiXin.getBindLoginInfo = function(provider, encryptedUserId, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/WeiXin/GetBindLoginInfo' + abp.utils.buildQueryString([{ name: 'provider', value: provider }, { name: 'encryptedUserId', value: encryptedUserId }]) + '',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'setUploadInfo'
    abp.services.app.weiXin.setUploadInfo = function(guid, uploadResult, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/WeiXin/SetUploadInfo' + abp.utils.buildQueryString([{ name: 'guid', value: guid }]) + '',
        type: 'POST',
        dataType: null,
        data: JSON.stringify(uploadResult)
      }, ajaxParams));;
    };

    // action 'getUploadInfo'
    abp.services.app.weiXin.getUploadInfo = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/WeiXin/GetUploadInfo',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'setUserInfo'
    abp.services.app.weiXin.setUserInfo = function(guid, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/WeiXin/SetUserInfo' + abp.utils.buildQueryString([{ name: 'guid', value: guid }]) + '',
        type: 'POST'
      }, ajaxParams));;
    };

    // action 'getUserInfo'
    abp.services.app.weiXin.getUserInfo = function(ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/WeiXin/GetUserInfo',
        type: 'GET'
      }, ajaxParams));;
    };

    // action 'downLoadMedia'
    abp.services.app.weiXin.downLoadMedia = function(mediaIds, ajaxParams) {
      return abp.ajax($.extend(true, {
        url: abp.appPath + 'api/services/app/WeiXin/DownLoadMedia',
        type: 'POST',
        data: JSON.stringify(mediaIds)
      }, ajaxParams));;
    };

  })();

})();
