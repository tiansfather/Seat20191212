@using Master.Web.Components
@inherits Master.Web.Components.MasterRazorPage<TModel>
@using Master.Module
@{
    @section styles{
        <style>
            html {
                background: #fff;
            }

            #app {
                padding: 30px;
            }

            .layui-table td {
                color: black;
            }

            .verify-span {
                font-size: 20px;
                color: red;
            }

            .site-title {
                margin: 30px 0 20px;
            }

                .site-title fieldset {
                    border: none;
                    padding: 0;
                    border-top: 1px solid #c0c0c0;
                }

                    .site-title fieldset legend {
                        margin-left: 20px;
                        padding: 0 10px;
                        font-size: 22px;
                        font-weight: 300;
                    }

            thead .feetype {
                width: 120px;
            }
            thead .processtaskid{
                width:150px;
            }
            thead .partspecification{
                width:150px;
            }
            .layui-icon-refresh {
                margin: 0 20px;
                font-size: 20px;
                font-weight: 900;
                cursor: pointer;
            }
        </style>
    }
}

<div id="app" v-cloak>
    <div>
        <form class="layui-form">
            <div class="layui-form-item">
                <div class="layui-inline">
                    <label class="layui-form-label">询价名称<span class="verify-span">*</span></label>
                    <div class="layui-input-inline">
                        <input type="text" name="quoteName" lay-verify="required" autocomplete="off" class="layui-input" v-model="currentItem.quoteName">
                    </div>
                </div>
                <div class="layui-inline">
                    <label class="layui-form-label">询价类型<span class="verify-span">*</span></label>
                    <div class="layui-input-inline" style="width:220px;">
                        <input type="radio" value="1" title="邀请投标" name="quoteScope" data-key="currentItem" v-model="currentItem.quoteScope">
                        <input type="radio" disabled="" value="2" title="公开投标" name="quoteScope" data-key="currentItem" v-model="currentItem.quoteScope">
                    </div>
                </div>
                <div class="layui-inline">
                    <label class="layui-form-label">付款方式<span class="verify-span">*</span></label>
                    <div class="layui-input-inline">
                        <input type="radio" value="1" title="协议" name="quotePayType" data-key="currentItem" v-model="currentItem.quotePayType">
                        <input type="radio" value="2" title="现金" name="quotePayType" data-key="currentItem" v-model="currentItem.quotePayType">
                    </div>
                </div>
                <div class="layui-inline">
                    <label class="layui-form-label">截止日期<span class="verify-span">*</span></label>
                    <div class="layui-input-inline">
                        <input type="text" name="expireDate" id="expireDate" lay-verify="require" autocomplete="off" class="layui-input" v-model="currentItem.expireDate">
                    </div>
                </div>
            </div>
            <button lay-submit lay-filter="submitProcessQuote" style="display:none;">提交</button>
        </form>
        <blockquote class="layui-elem-quote" style="padding:0 10px; margin-bottom: 0px;line-height:2.5;">
            @*若超过报价截止日期，报价通道将关闭，企业将无法进行投标及报价，请注意截止日期！*@
            超过截止日期，企业单位将无法进行投标；例如截止日期为2020-01-02 00:00:00,即代表最后投标时间为2020年1月1日的23点59分
        </blockquote>
    </div>
    <div class="site-title">
        <fieldset><legend><a name="card">邀请投标企业 
            <i class="layui-icon layui-icon-refresh" @@click="reloadTenantInfos" tips="刷新供应商加入状态"></i>
            </a></legend></fieldset>
    </div>
    <div style="width:80%;max-width:1000px;min-width:400px;">
        <multi-data-add :readonly="false" :items="unitItems" :parts="currentItem.unitIds">
            <template v-slot:quo-bid-sta="{part,item}">
                <span v-if="part.quoteBidStatus==-1" class="layui-badge">未加入</span>
                <span v-else-if="part.quoteBidStatus==0" class="layui-badge layui-bg-orange">未发送</span>
                <span v-else-if="part.quoteBidStatus==1" class="layui-badge layui-bg-cyan">待投标</span>
                <span v-else-if="part.quoteBidStatus==2" class="layui-badge layui-bg-blue">已投标</span>
                <span v-else-if="part.quoteBidStatus==3" class="layui-badge layui-bg-balck">已放弃</span>
                <span v-else-if="part.quoteBidStatus==4" class="layui-badge layui-bg-green">已中标</span>
                <span v-else-if="part.quoteBidStatus==5" class="layui-badge layui-bg-gray">未中标</span>
                <span v-else class="layui-badge layui-bg-gray">未选择</span>
            </template>
            <template v-slot:edit="{part,item}">
                <button v-if="part.quoteBidStatus==-1" class="layui-btn layui-btn-xs" @@click="inviteJion(part)">邀请加入</button>
                <span v-else-if="part.quoteBidStatus==0">已加入</span>
                <span v-else style="color:#fff;">其他状况</span>
            </template>
        </multi-data-add>
    </div>
    <div class="site-title">
        <fieldset><legend><a name="card">询价明细</a></legend></fieldset>
        <blockquote class="layui-elem-quote" style="padding:0 10px; margin-bottom: 0px;line-height:2.5;">
            @*选择的【任务】是【生产任务】中的未开单任务，可以对项目名称/零件名称/等进行编辑说明，但说明在选择中标单位后开单时不会保存在此任务中。*@
            @*"任务"项的来源为未开单任务，修改"任务"项选中后的具体数据，只是用来对投标企业描述更详细的信息，在选择中标单位后进行开单时不会对系统内已有的数据造成影响。*@
            先排工艺后询价：选择的【任务】是【生产任务】中的未开单任务，可以对项目名称/零件名称等进行编辑说明，但说明在选择中标单位后开单时不会影响原有任务。
            <br/>
            先询价后开单：直接输入项目名称/零件名称等信息，不需要选择任务。
        </blockquote>
    </div>
    <div>
        <multi-data-add :readonly="false" :items="items" :parts="currentItem.processQuoteTasks"> </multi-data-add>
    </div>
    <div class="site-title">
        <fieldset><legend><a name="card">备注及附件</a></legend></fieldset>
    </div>
    <div style="display:flex;" class="layui-form layui-form-pane">
        <div class="layui-form-item layui-form-text" style="width:500px;margin-right:50px;">
            <label class="layui-form-label">备注</label>
            <div class="layui-input-block">
                <textarea v-model="currentItem.remarks" placeholder="请输入内容" class="layui-textarea"></textarea>
            </div>
        </div>
        <div style="flex:1;">
            <multi-data-add :items="fileItems" :parts="currentItem.files"></multi-data-add>
            @*<button class="layui-btn layui-btn-sm" style="margin-bottom:10px;" type="button" id="uploadBtn">上传附件</button>
            <hr />
            <table class="layui-table">
                <colgroup>
                    <col width="80%" />
                    <col />
                </colgroup>
                <thead>
                    <tr>
                        <th>文件名称</th>
                        <th>操作</th>
                    </tr>
                </thead>
                <tbody>
                    <tr v-for="(item,index) in currentItem.files" :data="item">
                        <td style="width:80%"><a :href="item.filePath" target="_blank" style="color:blue;text-decoration:underline; ">{{item.fileName}}</a></td>
                        <td><button type="button" class="layui-btn layui-btn-danger layui-btn-sm" @@click="removeFile(index)">删除</button></td>
                    </tr>
                </tbody>
            </table>*@
        </div>
    </div>
</div>

@section scripts{
<script type="text/html" id="quoted">
    {{# if(d.quoted){}}
    <span class="layui-badge my-bg-green">是</span>
    {{#}else{}}
    <span class="layui-badge layui-bg-gray">否</span>
    {{#}}}
</script>
    <script>
        //上传前处理数据
        function handleData() {
            var submitData=JSON.parse(JSON.stringify(app.currentItem))
            //var submitData = $.extend({}, app.currentItem,true);//当用jq的深拷贝时，会把Vue复写的push,slice等也给拷贝了
            submitData.processQuoteTasks.forEach(function (elm, index) {
                if ($.isEmptyObject(elm)) {
                    submitData.processQuoteTasks.splice(index,1)
                }
                if (!(typeof elm.id == 'number' || typeof elm.id == 'string')) {
                    elm.id = 0;
                }
                //处理任务ID
                if (elm.processTaskId) {
                    elm.processTaskId = elm.processTaskId.value
                }

            })
            submitData.unitIds.forEach(function (elm, index) {
                if (elm.unit && elm.unit.value) {
                    submitData.unitIds[index] = elm.unit.value;
                } else {
                    submitData.unitIds.splice(index, 1)
                }
            })
            return submitData
        }



        function submit() {
            abp.message.confirm('确认提交？', function () {
                $('[lay-filter="submitProcessQuote"]').click();
            })

        }
        function submit2() {
            var submitData = handleData();
            func.runAsync( abp.services.app.processQuote.submitProcessQuote(submitData).done(function () {
                parent.config.reloadTable();
                parent.layer.closeAll();
                parent.layer.msg('保存成功')
            }))

        }
        config.ready = function () {

            window.app = new Vue({
                el: '#app',
                data: function () {
                    var unitItems = [
                        {
                            type: 'tableSelect', title: '供应商', info: {
                                ColumnKey: 'unitName',
                                ReferenceSearchWhere: { where: "unitNature=2 or unitNature=3" },
                                placeholder: '',
                                SearchPlaceholder: '搜索企业名称',
                                RelativeDataType: 'Url',
                                RelativeDataString: '/api/services/app/Unit/GetPageResult',
                                ReferenceItemTpl: 'unitName',
                                ReferenceSearchColumns: [{ field: "unitName", width: 250, title: "企业" },
                                { field: "address", title: "地址" }],
                            }, verify: '', key: 'unit', onChange: function (newV, partIndex) {
                                //有对应账套id则可以发送
                                if (typeof newV.data[0].tenantId != "undefined") {
                                    Vue.set(app.currentItem.unitIds[partIndex], 'quoteBidStatus', 0)
                                } else {
                                    Vue.set(app.currentItem.unitIds[partIndex], 'quoteBidStatus', -1)
                                }
                                console.log(newV.data[0].tenantId)
                            }
                        },
                        { type: 'slot', title: '询价状态', slot: 'quo-bid-sta', key: 'quoteBidStatus' },
                        { type: 'slot', title: '操作', key: 'edit', slot: 'edit' },
                    ];
                    var items = [
                        {
                            type: 'tableSelect', title: '任务', info: {
                                ColumnKey: 'ProcessTask',
                                ReferenceSearchWhere: { where: "1=1 and ProcessTaskStatus=0 and !status.contains(\"inner\") and supplierId = null" },
                                placeholder: '',
                                SearchPlaceholder: '搜索模具编号/零件/工序',
                                RelativeDataType: 'Url',
                                RelativeDataString: '/api/services/app/ProcessTask/GetPageResult',
                                ReferenceItemTpl: 'projectSN',
                                ReferenceSearchColumns: [{ field: "projectSN", title: "模具编号", width: 100 },
                                { field: "partName", title: "零件", width: 80 },
                                { field: "partSN", title: "零件编号", width: 100 },
                                { field: "processTypeName", title: "工序" },
                                { field: "partSpecification", title: "规格", width: 100 },
                                    { field: "partNum", title: "数量" },
                                    { field: 'quoted', title: '已询价', templet:'#quoted'}
                                    //{
                                    //    field: "quoted", title: "已询价", templet: function (d) {
                                    //        console.log(d)
                                    //        if (d.quoted) {
                                    //            return '<span class="layui-badge my-bg-green">是</span>'
                                    //        } else {
                                    //            return '<span class="layui-badge layui-bg-gray">否</span>'
                                    //        }
                                    //    }
                                    //}
                                ],
                            }, verify: '', key: 'processTaskId', onChange: function (newV, partIndex) {

                                app.currentItem.processQuoteTasks[partIndex].processTaskId.displayValue = '已绑定加工任务';
                                //, 'estimateHours'
                                ['projectName', 'partName', 'processTypeName', 'partSpecification', 'partNum', 'requireDate', 'feeType', 'feeFactor', 'taskInfo'].forEach(function (elm, index) {
                                    Vue.set(app.currentItem.processQuoteTasks[partIndex], elm, newV.data[0][elm])

                                })

                                console.log(newV.data[0])
                            }
                        },
                        { type: 'text', title: '项目名称', verify: '', key: 'projectName' },
                        { type: 'text', title: '零件名称', verify: '', key: 'partName' },
                        { type: 'text', title: '加工工艺', verify: '', key: 'processTypeName' },
                        { type: 'text', title: '规格', verify: '', key: 'partSpecification' },
                        { type: 'number', title: '数量', verify: '', key: 'partNum' },
                        { type: 'date', title: '要求完成日期', verify: '', key: 'requireDate' },
                        //{ type: 'text', title: '预计工时', verify: '', key: 'estimateHours' },
                        {
                            type: 'select', title: '计价方式', verify: '', key: 'feeType',
                            options: [{ text: '承包', value: 0 }, { text: '按时间', value: 1 }, { text: '按平方', value: 2 }, { text: '按长度', value: 3 }, { text: '按重量', value: 4 }, { text: '按数量', value: 5 }], onChange: function (newVal, partIndex) {
                                console.log(newVal, partIndex)
                            }
                        },
                        { type: 'number', title: '时间/长度/重量/平方', verify: '', key: 'feeFactor' },
                        { type: 'text', title: '工艺要求', verify: '', key: 'taskInfo' },
                    ];
                    var fileItems = [
                        { type: 'text', title: '文件名称', key: 'fileName' },
                        {
                            type: 'upload', title: '操作', key: 'upload',
                            onChange: function (ev, index) {
                                Vue.set(app.currentItem.files[index], 'filePath', location.origin + ev.filePath);
                                Vue.set(app.currentItem.files[index], 'fileName', ev.fileName);
                            }
                        },
                        { type: 'text', title: '数据路径', key: 'filePath' },
                    ]
                    return {
                        items: items,
                        unitItems: unitItems,
                        fileItems: fileItems,
                        currentItem: {
                            id: $.getUrlParam('data')||0,
                            quoteName: '',
                            quoteScope: 1,
                            quotePayType: 1,
                            expireDate: new Date().addDay(1, 'd', 'yyyy-MM-dd HH:mm:ss'),
                            unitIds: [{}],
                            processQuoteTasks: [{}],
                            files: []
                        }
                    }
                },
                methods: {
                    reloadTenantInfos: function () {
                        this.currentItem.unitIds = this.currentItem.unitIds.filter(elm => elm.unit);
                        var arr = this.currentItem.unitIds.map(e => e.unit.value);
                        abp.services.app.mESUnit.getUnitTenantInfos(arr).done(res => {
                            res.forEach((elm, index) => {
                                if (elm.tenantBinded) {
                                    this.currentItem.unitIds[index].quoteBidStatus = 0;
                                }
                            })
                        })
                    },
                    removeFile: function (index) {
                        //删除附件
                        this.currentItem.files.splice(index, 1);
                    },
                    inviteJion: function (part) {
                        var unit=part.unit,
                            companyName = unit.displayValue,
                            unitId = unit.value;
                        var inviter = abp.session.tenantId;
                        var imgSrc = '/api/qrcode?url=' + encodeURIComponent(location.origin + "/MES/Register?inviter=" + inviter + "&companyName=" + encodeURIComponent(companyName));
                        var index=layer.open({
                            type: 0,
                            offset: function () { },
                            anim: 0,
                            shade: 0.3,
                            btn: [],
                            title: false,
                            content: `<div style="">
                                            <img src="${imgSrc}">
                                            <p style="text-align: center;">将此二维码发给对方进行注册</p>
                                        </div>`,
                        });
                        (function loopFunc() {
                            abp.services.app.mESUnit.getUnitTenantInfos([unitId]).done(res => {
                                if (res[0].tenantBinded) {
                                    //跳出循环
                                    layer.close(index);
                                    part.quoteBidStatus = 0;
                                } else {
                                    window.setTimeout(loopFunc, 1000);
                                }
                            })
                        })()
                    },
                    layuiRender: function () {
                        var laydate = layui.laydate, form = layui.form,that=this;
                        laydate.render({
                            elem: "#expireDate",
                            type: 'datetime',
                            done: function (value, date, endDate) {
                                that.currentItem.expireDate = value;
                                console.log(value); //得到日期生成的值，如：2017-08-18
                            }
                        });
                        form.on('radio()', function (data) {
                            console.log($(data.elem).attr('data-key'))
                            if ($(data.elem).attr('data-key') == 'currentItem') {
                                //监听到quoteMsg的单选框变化，赋值给它。
                                app.currentItem[$(data.elem).attr("name")] = data.value;
                            }
                            //refresh();
                        });

                        //上传配置
                        func.renderUpload('#uploadBtn', {
                            trigger: 'click',
                            callback: function (res) {
                                if (!app.currentItem.files || !app.currentItem.files.length) {
                                    app.currentItem.files = [];
                                }
                                app.currentItem.files = app.currentItem.files.concat(res);
                            },
                            multiple: true
                        })

                        //监听提交
                        layui.form.on('submit(submitProcessQuote)', function (data) {
                            var submitData = handleData();
                            function publishVerify() {
                                //上传前验证
                                if (!submitData.processQuoteTasks.length || !submitData.unitIds.length) {
                                    abp.message.error('没有企业数据或没有询价明细数据')
                                    return false;
                                }
                                var isAllJoin = app.currentItem.unitIds.every(function (elm, index) {
                                    return (typeof elm.quoteBidStatus != 'undefined') && (Number(elm.quoteBidStatus) >= 0)
                                })
                                if (!isAllJoin) {
                                    abp.message.error('有部分企业未加入，请先邀请')
                                    return false;
                                }
                                return true;
                            }
                            if (!publishVerify()) {
                                //abp.message.error('验证不通过')
                                return false;
                            }
                            func.runAsync(abp.services.app.processQuote.submitProcessQuote(submitData, true).done(function () {
                                parent.config.reloadTable();
                                parent.layer.closeAll();
                                parent.layer.msg('保存成功')
                            }))

                            return false; //阻止表单跳转。如果需要表单跳转，去掉这段即可。
                        });
                    },
                    loadItem: function () {
                        function resetData(res) {
                            //res.expireDate = new Date(res.expireDate).pattern('yyyy-MM-dd HH:mm:ss');

                            res.processQuoteTasks.forEach(function (elm,index) {
                                elm.requireDate && (elm.requireDate = new Date(elm.requireDate).pattern('yyyy-MM-dd'));
                                var TaskId = elm.processTaskId
                                TaskId && (elm.processTaskId = { displayValue: '已绑定加工任务', value: TaskId })
                            })
                            res.unitIds = [];
                            res.processQuoteBids.forEach(function (elm, index) {
                                res.unitIds[index] = {
                                    quoteBidStatus: elm.quoteBidStatus,
                                    unit: { displayValue: elm.unitUnitName, value: elm.unitId }
                                };
                            })
                            return res
                        }
                        var that = this;
                        abp.services.app.processQuote.getQuoteInfo(this.currentItem.id).done(function (res) {
                            that.currentItem = resetData(res);
                        })
                    },
                    loadTaskId: function () {
                        var taskId = $.getUrlParam('taskid');
                        abp.services.app.processTask.getTaskInfoById(taskId).done(res => {
                            //设置任务值
                            ['projectName', 'partName', 'processTypeName', 'partSpecification', 'partNum', 'requireDate', 'feeType', 'feeFactor', 'taskInfo'].forEach(function (elm, index) {
                                Vue.set(app.currentItem.processQuoteTasks[0], elm, res[elm])
                            })
                            Vue.set(app.currentItem.processQuoteTasks[0], 'processTaskId', { displayValue: "已绑定加工任务", value: taskId })
                            app.currentItem.quoteName = `${res.partName}/${res.processTypeName}-询价清单`
                        })
                    }
                },
                mounted: function () {
                    refresh();
                    this.layuiRender();
                    if ($.getUrlParam('data')) {
                        this.loadItem();
                    }
                    if ($.getUrlParam('taskid')) {
                        //当从加工开单进来，赋下初值
                        this.loadTaskId();
                    }

                }
            })
        }
        function refresh() {
            Vue.nextTick(layui.form.render)

        }
    </script>
}