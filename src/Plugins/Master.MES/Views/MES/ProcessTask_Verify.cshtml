@using Master.Web.Components
@inherits Master.Web.Components.MasterRazorPage<TModel>
@using Master.Module
@{
    Layout = "~/Views/Shared/_LayoutDialog.cshtml";
}

<form class="layui-form layui-form-pane" id="app" v-cloak>
    @*<div class="layui-form-item" pane>
            <label class="layui-form-label">@L("总对账金额")</label>
            <div class="layui-input-block">
                <input type="text" autocomplete="off" class="layui-input" name="checkedFee" >
            </div>
        </div>*@
    <div class="layui-form-item">
        <div class="layui-inline" style="margin-left:70px;">
            <label class="layui-form-label">@L("总金额")</label>
            <div class="layui-input-inline">
                <input type="text" autocomplete="off" class="layui-input" name="checkedFee" v-model="totalFee">
            </div>
        </div>
    </div>

    <div>
        <table id="searchTable" class="layui-table" lay-size="sm">
            <thead style="border:1px solid #ccc;">
                <tr>
                    <th width="10%">@L("项目编号")</th>
                    <th width="10%">@L("零件名称")</th>
                    <th width="15%">@L("加工点")</th>
                    <th width="10%">@L("加工类型")</th>
                    <th width="10%">@L("计价方式")</th>
                    <th width="10%">@L("初始金额")</th>
                    <th width="20%">@L("实际金额")</th>
                </tr>
            </thead>
            <tbody>
                <tr v-for="(item,index) in tasks">
                    <td>
                        {{item.projectSN}}
                    </td>
                    <td>
                        {{item.partName}}
                    </td>
                    <td>
                        {{item.unitName}}
                    </td>
                    <td>
                        {{item.processTypeName}}
                    </td>
                    <td>
                        {{item.feeType}}
                    </td>
                    <td>
                        {{item.jobFee}}
                    </td>
                    <td>
                        <input type="text" class="layui-input" v-model="item.fixFee" />
                    </td>
                </tr>
            </tbody>
        </table>
    </div>

    <div style="display:none">
        <button class="layui-btn" type="button" lay-submit="" id="MeasureMent_Submit">@L("提交")</button>
    </div>

</form>

@section scripts{
    <script>
		var app;
        config.ready = function () {
            

			var dataIds = $.getUrlParam("data").split(',');
            app = new Vue({
                el: '#app',
                data: {
                    tasks: [],
                    totalFee: '',
                    sumFlag: 0,
                    sumWriteFlag:1
                },
                created: function () {
                    var that = this;
                    func.runAsync(abp.services.app.processTask.getProcessTaskInfosByIds(dataIds).done(function (data) {
                        data = data.map(function (n) {//两种情况，一种在fee为0时，最后得到的也为0，另一种，fee为0，继续看jobFee的值。
                            //取出一个arr中第一个碰到的numberr类型的值
                            function fnumFee(a) {
                                if (a.length > 0) {
                                    if (typeof a[0] === 'number') {
                                        return a[0];
                                    } else {
                                        a.shift();
                                        return fnumFee(a);
                                    }
                                } else {
                                    return 0;
                                }
                            }
                            n.fee = fnumFee([n.fee, n.jobFee]);

                            n.fixFee=Number(n.fee.toFixed(2));//新增一个显示fee数据
                            return n;
                        })
                        that.tasks = data;
                        refresh();
                        //that.tasks.forEach(function (n) {
                        //    that.totalFee += n.fee
                        //});
                    }));
                },
                watch: {
                    totalFee: function (val, oldVal) {
                        if (this.sumFlag > 0) {
                            var that = this;
                            var initTotalFee = 0;
                            that.tasks.forEach(function (n) {
                                initTotalFee += n.fee;
                            });
                            var tLength = this.tasks.length;
                            this.sumWriteFlag = 0;
                            this.tasks = this.tasks.map(function (n) {
                                var num;
                                if (initTotalFee == 0) {    //上次的总值为0，平分现在的 总值
                                    num = val / tLength ;
                                } else {                    //上次有值，则按比例平分总值
                                    num = val * (n.fee / initTotalFee);
                                }
                                n.fee = (num != 0 ? num : n.fee);
                                n.fixFee=Number(n.fee.toFixed(2));
                                return n;
                            })
                        } else {
                            this.sumFlag++;
                        }
                    },
                    tasks: {
                        handler: function (val, oldVal) {       //当fixFee改变时，进去
                            console.log(this.sumWriteFlag)
                            if (this.sumWriteFlag > 0) {
                                var temp = 0;
                                this.tasks.forEach(function (n) {
                                    n.fee = Number(n.fixFee);               //让真正的fee值改变
                                    //会进来两次watch，是因为fixFee手动输入改变后，会更改fee，会再次进去
                                    temp += n.fee;
                                })
                                this.sumFlag = 0;
                                this.totalFee = temp;               //让总值改变
                            } else {
                                this.sumWriteFlag++;
                            }


                        },
                        deep: true
                    }
                }
            })
        }

		function submit() {
            //todo:提交验证
            var data = app.tasks.map(function (o) { return { id: o.id, CheckFee: o.fee }; });
            func.runAsync(abp.services.app.processTask.verifyFee(data).done(function () {
				parent.layer.msg("@L("提交成功")");
                    parent.layer.closeAll("iframe");
                    parent.func.reload("ProcessTask");
			}))
        }
        function refresh() {
            Vue.nextTick(function () {
                layui.form.render();
            })

        }
    </script>
}