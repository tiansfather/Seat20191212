@using Master.Web.Components
@using Master.Module
@using Abp.Extensions;
@inherits MasterRazorPage<TModel>
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@addTagHelper *, Master.Web.Core
@model ModuleTableViewModel
@{
    var columns = Model.ModuleInfo.FilterdColumnInfos(FormType.List);
    var btns = Model.ModuleInfo.Buttons;
    if (Model.ColumnFilter != null)
    {
        columns = columns.Where(Model.ColumnFilter.Compile());

    }

    foreach (var column in columns)
    {
        column.Normalize();
    }
}
<style>
    .model-table {
        position: relative;
    }

        .model-table .layui-table-tool {
            position: absolute;
            top: -50px;
            z-index: 999;
            width: 130px;
            right: 0;
        }
</style>
<div class="model-table">
    @*<table module="@Model.ID" autoevent="1" id="@Model.ID" lay-filter="@Model.Filter" class="layui-table @Model.ClassName" lay-data="{toolbar:true,cellMinWidth:'120',height:'@Model.Height', url:'@Model.DataUrl',where:{where:'@Model.Where',searchKeys:'@Model.SearchKeys'}, page:true,limit:@Model.ModuleInfo.DefaultLimit,limits:@Model.ModuleInfo.Limits,initSort:{field:'@Model.ModuleInfo.SortField',type:'@Model.ModuleInfo.SortType.ToString().ToLower()'}, id:'@Model.ID', even: true,done:config.onTableDone}">
            <thead>
                <tr>
                    @if (Model.ShowCheckbox)
                    {
                        <th lay-data="{type:'checkbox',fixed:'left'}"></th>

                    }

                    @foreach (var columnInfo in columns.OrderBy(o => o.TableColumnOrder))
                    {
                        <th column-info="@columnInfo"></th>
                    }
                </tr>
            </thead>
        </table>*@
    <table id="@Model.ID" lay-filter="@Model.Filter" model="true"></table>
</div>

@*列模板*@
@foreach (var column in columns.Where(o => !string.IsNullOrWhiteSpace(o.Templet) || o.ColumnType == ColumnTypes.Images || o.ColumnType == ColumnTypes.Files))
{
    <script type="text/html" id="templet_@(column.ModuleInfo.ModuleKey)_@column.ColumnKey">

        @if (!string.IsNullOrEmpty(column.Templet))
        {
            @Html.Raw(column.Templet)

        }
        else if (column.ColumnType == ColumnTypes.Images)
        {
            //图片的列表展示模板 20180609 lijianbo
            @*{ { #foreach()} }
                <img class=\"layui-upload-img thumb\" style="max-width:120px;max-height:120px;" FileID="{{d.@(column.ColumnKey)}}" src="/File/Thumb?fileid = &w=120&h =120\">
                        { { } }*@

            @Html.Raw("{{# layui.each(d." + (column.ColumnKey.ToCamelCase()) + "_Files, function(index, data){ }}")


            @Html.Raw("{{# var file=data.filePath.split('.') }}")

            //<img class="layui-upload-img thumb" FileID="{{data.id}}" src="/File/Thumb?fileid={{data.id}}">
            <img class="thumb" FileID="{{data.id}}" src="/File/Thumb/{{data.id}}?w=38" onerror="this.src='/assets/ico/default.gif'">

            @Html.Raw("{{# }) }}")
        }
        else if (column.ColumnType == ColumnTypes.Files)
        {
            //todo:文件的列表展示模板
            // var file = await FileManager.GetByIdAsync(column.Id);
            //@Html.Raw(file.FileName)

            @Html.Raw("{{# layui.each(d." + (column.ColumnKey.ToCamelCase()) + "_Files, function(index, data){ }}")

            @Html.Raw("{{# var file=data.filePath.split('.') }}")

            //<img class="layui-upload-img" FileID="{{data.id}}" src="/File/Thumblog?fileid={{data.id}}" tips="{{data.fileName}}">
            <a href="{{data.filePath}}" target="_blank"><img FileID="{{data.id}}" src="/assets/ico/{{file[1]}}.gif" tips="{{data.fileName}}"></a>
            @Html.Raw("{{# }) }}")
        }
    </script>

}
@*操作按钮模板*@
@if (columns.ToList().Exists(o => o.IsOperationColumn))
{

    <script type="text/html" id="Operation">
        @foreach (var button in Model.ModuleInfo.Buttons.Where(o => o.IsEnabled && o.ButtonType.HasFlag(ButtonType.ForSingleRow)).OrderBy(o => o.Sort))
        {
            //权限判定
            if (!button.RequirePermission || await PermissionChecker.IsGrantedAsync(button.ButtonPermissionName))
            {
                var clientCondition = !string.IsNullOrEmpty(button.ClientShowCondition) ? button.ClientShowCondition : "true";
                @Html.Raw("{{# if(" + clientCondition + "){ }}")
                <a dataid="{{d.id}}" class="layui-btn layui-btn-xs @button.ButtonClass" module-button="@button" title="@(!string.IsNullOrEmpty(button.TitleTemplet)?button.TitleTemplet:button.ButtonName)"></a>
                @("{{# } }}")
            }

        }

    </script>

}
@*按钮的自定义函数*@
<script>
    @foreach(var btn in btns.Where(o=>o.ButtonActionType==ButtonActionType.Func && !string.IsNullOrEmpty(o.ButtonScript))){
        @Html.Raw(btn.ButtonScript)
    }
</script>
<script>
    config.readyFuncs.push(function () {
        var table = layui.table;
        abp.services.app.moduleInfo.getColumnLayData("@Model.ID").done(function (data) {
            var cols = data.columns;
            var hasTotalRow = cols.some(o => o.totalRow);
            if ("@Model.ShowCheckbox" == "True") {
                cols.splice(0, 0, { fixed: 'left', type: 'checkbox' });
                if (hasTotalRow) {
                    cols[0].totalRowText = "合计:";
                }
            }
            table.render({
                elem: '#@Model.ID',
                autoSort:false,
                toolbar: false,
                cellMinWidth: '120',
                height: '@Model.Height',
                url: '@Model.DataUrl',
                totalRow: hasTotalRow,
                where: { where: '@Html.Raw(Model.Where)', searchKeys: '@Html.Raw(Model.SearchKeys)' },
                page: true,
                limit:@Model.ModuleInfo.DefaultLimit,
                limits:@Model.ModuleInfo.Limits,
                initSort: {
                    field: '@Model.ModuleInfo.SortField',
                    type: '@Model.ModuleInfo.SortType.ToString().ToLower()'
                },
                id: '@Model.ID',
                even: true,
                cols: [cols],
                excel: {on:false},
                done: function () {
                    //console.log('tableDone');
                    layui.soulTable.render(this);
                    config.onTableDone();
                }
            });
        })
        table.on('sort(@Model.Filter)', function (obj) { //注：tool是工具条事件名，test是table原始容器的属性 lay-filter="对应的值"
            //console.log(obj.field); //当前排序的字段名
            //console.log(obj.type); //当前排序类型：desc（降序）、asc（升序）、null（空对象，默认排序）
            //console.log(this); //当前排序的 th 对象

            //尽管我们的 table 自带排序功能，但并没有请求服务端。
            //有些时候，你可能需要根据当前排序的字段，重新向服务端发送请求，从而实现服务端排序，如：
            table.reload('@Model.ID', {
                initSort: obj //记录初始排序，如果不设的话，将无法标记表头的排序状态。 layui 2.1.1 新增参数
                , where: { //请求参数（注意：这里面的参数可任意定义，并非下面固定的格式）
                    orderfield: obj.field,
                    ordertype:obj.type
                }
            });
        });

    })
</script>